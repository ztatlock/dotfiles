###############################################################################
# misc
###############################################################################

function source-if {
  if [ -r "$1" ]; then
    source "$1" &> /dev/null
  fi
}

export EDITOR="vim"

# suppress macOS bash warning
export BASH_SILENCE_DEPRECATION_WARNING=1

# use simple TERM for UW CSE servers
[ "$HOME" = "/homes/gws/ztatlock" ] \
  && export TERM=xterm

###############################################################################
# locale
###############################################################################

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

###############################################################################
# PATH
###############################################################################

export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/bin:$PATH"
export PATH="$HOME/local/bin:$PATH" # personal builds
export PATH="$HOME/bin:$PATH"       # personal scripts

###############################################################################
# package manager, programming language, and tool configurations
###############################################################################

source-if "$HOME/.opam/opam-init/init.sh" # ocaml
source-if "$HOME/.cargo/env"              # rust
source-if "$HOME/.ghcup/env"              # haskell

export PATH=/usr/local/smlnj/bin:"$PATH"  # smlnj

source-if "$HOME/local/z/z.sh"            # https://github.com/rupa/z

# gnu parallel
if [ -n "$(command -v env_parallel)" ]; then
  source-if "$(which env_parallel).bash"
fi

###############################################################################
# begin interative-only settings
###############################################################################

if [ -z "$PS1" ]; then
  return
fi

###############################################################################
# use colors
###############################################################################

[ "$(uname)" = "Darwin" ] \
  && alias ls='ls -G' \
  || alias ls='ls --color=auto'

alias grep='grep --color=auto'

###############################################################################
# completions
###############################################################################

if [ -n "$(command -v brew)" ]; then
  source-if "$(brew --prefix)/etc/profile.d/bash_completion.sh"
  #source-if "$(brew --prefix)/etc/bash_completion.d/git-completion.bash"
  #source-if "$(brew --prefix)/etc/bash_completion.d/git-prompt.sh"
  source-if "$(brew --prefix)/etc/profile.d/z.sh"
else
  source-if "/etc/bash_completion"
fi

###############################################################################
# cygwin-style PS1 prompt
###############################################################################

if [ -n "$(command -v __git_ps1)" ]; then
  export PS1="\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \e[0;35m\]\t \[\e[33m\]\w\[\e[36m\]\$(__git_ps1)\[\e[0m\]\n\$ "
else
  export PS1="\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[0;35m\]\t \[\e[33m\]\w\[\e[0m\]\n\$ "
fi

## ###############################################################################
## # make completion, see
## # https://stackoverflow.com/questions/4188324/bash-completion-of-makefile-target
## ###############################################################################
##
## if [ "$(uname)" = "Darwin" ]; then
##   complete -W \
##     "\`grep -oE '^[a-zA-Z0-9_.-]+:([^=]|$)' ?akefile | sed 's/[^a-zA-Z0-9_.-]*$//'\`" \
##     make
## fi
##
## ###############################################################################
## # ssh completion, see
## # https://gist.github.com/fieg/2357723
## ###############################################################################
##
## function comp_ssh_hosts {
##   cat ~/.ssh/known_hosts \
##     | cut -f 1 -d ' '    \
##     | sed -e s/,.*//g    \
##     | grep -v '^#'       \
##     | uniq               \
##     | grep -v "\["
##
##   cat ~/.ssh/config  \
##     | grep "^Host "  \
##     | awk '{print $2}'
## }
##
## function _complete_ssh_hosts {
##   COMPREPLY=()
##   cur="${COMP_WORDS[COMP_CWORD]}"
##   COMPREPLY=( $(compgen -W "$(comp_ssh_hosts)" -- $cur))
##   return 0
## }
##
## complete -F _complete_ssh_hosts ssh
## complete -F _complete_ssh_hosts mosh

echo

FORTUNES="$HOME/dotfiles/fortunes"
[ -d "$FORTUNES" ] && fortune "$FORTUNES"
